[2024-12-09 10:37:49 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 8144 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 10:37:49 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:37:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:37:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:37:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:37:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:37:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:37:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:37:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:37:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 919 ms
[2024-12-09 10:37:50 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 10:37:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:37:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:37:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:37:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:37:51 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.965 seconds (process running for 2.398)
[2024-12-09 10:37:51 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:37:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:37:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 10:37:53 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 10:37:53 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@5240d13b, page=1, size=20, startIdx=0)
[2024-12-09 10:37:53 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:37:53 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4c118b34
[2024-12-09 10:37:53 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:37:53 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:06 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test'
 {executed in 0 msec}
[2024-12-09 10:38:06 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                       |upw                                                          |
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |$2a$10$U/746OTg9rqWqMItg5MZAe1UBBwQWPzI3p0ydhWCKD9i8NaD1rRia |
|--------|---------|------------------------------------------|-------------------------------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test'
 {executed in 1 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                       |upw                                                          |
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |$2a$10$U/746OTg9rqWqMItg5MZAe1UBBwQWPzI3p0ydhWCKD9i8NaD1rRia |
|--------|---------|------------------------------------------|-------------------------------------------------------------|

[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@73b963dc, page=1, size=20, startIdx=0)
[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:38:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:38:34 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 173 ms
[2024-12-09 10:38:42 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengramver.common.model.ResultResponse<com.green.greengramver.user.model.UserInfoGetRes> com.green.greengramver.user.UserController.getUserInfo(com.green.greengramver.user.model.UserInfoGetReq): [Field error in object 'userInfoGetReq' on field 'signed_user_id': rejected value [null]; codes [typeMismatch.userInfoGetReq.signed_user_id,typeMismatch.signed_user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userInfoGetReq.signed_user_id,signed_user_id]; arguments []; default message [signed_user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [long] for value [null]]] ]
[2024-12-09 10:39:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:39:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:39:38 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5664 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 10:39:38 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:39:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:39:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:39:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:39:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:39:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:39:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:39:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:39:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-09 10:39:39 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 10:39:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:39:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:39:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:39:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:39:40 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.646 seconds (process running for 1.981)
[2024-12-09 10:39:40 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:39:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:39:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:39:40 INFO http-nio-8080-exec-7] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 207 ms
[2024-12-09 10:39:47 INFO http-nio-8080-exec-10] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=19)
[2024-12-09 10:39:47 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:39:47 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1ed6f796
[2024-12-09 10:39:47 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:39:47 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 1 msec}
[2024-12-09 10:39:47 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |3           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 11:18:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:18:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:18:16 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 2028 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:18:16 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-09 11:18:17 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:18:17 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.637 seconds (process running for 1.991)
[2024-12-09 11:18:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:18:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:18:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:18:18 INFO http-nio-8080-exec-9] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 203 ms
[2024-12-09 11:18:30 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:18:30 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengramver.common.model.ResultResponse<java.util.List<com.green.greengramver.feed.model.FeedGetRes>> com.green.greengramver.feed.FeedController.getFeedList(com.green.greengramver.feed.model.FeedGetReq): [Field error in object 'feedGetReq' on field 'profile_user_id': rejected value [null]; codes [typeMismatch.feedGetReq.profile_user_id,typeMismatch.profile_user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedGetReq.profile_user_id,profile_user_id]; arguments []; default message [profile_user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [@org.springframework.web.bind.annotation.BindParam @io.swagger.v3.oas.annotations.media.Schema long] for value [null]]] ]
[2024-12-09 11:35:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 36 class path changes (0 additions, 0 deletions, 36 modifications)
[2024-12-09 11:35:48 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:35:48 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 2028 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:35:48 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:35:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:35:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:35:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:35:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:35:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:35:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 212 ms
[2024-12-09 11:35:48 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:35:48 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-09 11:35:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 11:35:48 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 11:35:48 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengramver.GreenGramVer3Application.main(GreenGramVer3Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\SGSG\GreenGramVer3\build\classes\java\main\com\green\greengramver\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 5; 요소 유형 "if" 다음에는 속성 사양 ">" 또는 "/>"가 와야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 유형 "if" 다음에는 속성 사양 ">" 또는 "/>"가 와야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1443)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1372)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2726)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-09 11:36:37 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 2028 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:36:37 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:36:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:36:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:36:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:36:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:36:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:36:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 189 ms
[2024-12-09 11:36:37 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:36:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:36:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:36:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:36:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:36:38 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 0.362 seconds (process running for 1102.176)
[2024-12-09 11:36:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 11:37:58 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 3172 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:37:58 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:37:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:37:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:37:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:37:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:37:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:37:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:37:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:37:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 760 ms
[2024-12-09 11:37:58 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:37:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:37:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:37:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:37:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:37:59 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.663 seconds (process running for 2.036)
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@3d05a194, page=1, size=30, startIdx=0)
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65cb003c
[2024-12-09 11:38:03 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:38:03 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE writer_user_id = 0' at line 14
[2024-12-09 11:38:03 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18
        ORDER BY A.feed_id DESC
        LIMIT 0, 30

            WHERE writer_user_id = 0
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE writer_user_id = 0' at line 14
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:38:03 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE writer_user_id = 0' at line 14
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,         B.user_id AS writerUserId         , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm         , B.uid, B.pic AS writerPic         , IF(C.user_id IS NULL, 0, 1) AS isLike         FROM feed A INNER JOIN user B           ON A.writer_user_id = B.user_id         LEFT JOIN feed_like C            ON A.feed_id = C.feed_id           AND C.user_id = ?         ORDER BY A.feed_id DESC         LIMIT ?, ?                       WHERE writer_user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE writer_user_id = 0' at line 14
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE writer_user_id = 0' at line 14
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:38:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:38:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:38:43 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 3820 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:38:43 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:38:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:38:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:38:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:38:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:38:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:38:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:38:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:38:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 885 ms
[2024-12-09 11:38:44 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:38:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:38:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:38:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:38:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:38:45 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.728 seconds (process running for 2.069)
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@3d05a194, page=1, size=30, startIdx=0)
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65cb003c
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:38:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 0

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-09 11:38:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 11:39:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:39:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:39:50 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 7152 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:39:50 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:39:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:39:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:39:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:39:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:39:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:39:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:39:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:39:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 756 ms
[2024-12-09 11:39:51 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:39:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:39:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:39:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:39:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:39:52 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.627 seconds (process running for 1.945)
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=0)
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2240059c
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:39:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 0

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-09 11:39:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 11:40:30 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:40:30 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=0)
[2024-12-09 11:40:30 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 0

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-09 11:40:30 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 11:40:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:40:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:40:45 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4316 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:40:45 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:40:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:40:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:40:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:40:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:40:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:40:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:40:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:40:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 771 ms
[2024-12-09 11:40:46 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:40:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:40:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:40:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:40:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:40:46 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.651 seconds (process running for 1.988)
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2240059c
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |1      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |1      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:40:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:40:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 18
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=19)
[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 11:40:55 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:40:55 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:45:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:45:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:46:13 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4688 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:46:13 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:46:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:46:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:46:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:46:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:46:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:46:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:46:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:46:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1019 ms
[2024-12-09 11:46:14 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:46:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:46:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:46:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:46:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:46:15 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.963 seconds (process running for 2.429)
[2024-12-09 11:46:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:46:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:46:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ee0845e
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 11:46:20 INFO http-nio-8080-exec-1] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |7         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:46:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:46:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:46:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:46:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:47:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 776 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 11:47:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:47:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:47:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:47:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:47:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:47:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:47:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:47:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:47:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 864 ms
[2024-12-09 11:47:19 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 11:47:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:47:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:47:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:47:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:47:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.768 seconds (process running for 2.105)
[2024-12-09 11:47:21 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:47:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:47:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5cd89e08
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:47:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 11:47:24 INFO http-nio-8080-exec-1] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 1 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |7         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:47:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:47:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:47:39 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:47:39 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:04:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5076 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 12:04:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:04:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:04:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:04:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:04:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:04:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:04:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:04:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:04:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 764 ms
[2024-12-09 12:04:21 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 12:04:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:04:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:04:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:04:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:04:21 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.631 seconds (process running for 1.968)
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7be32e4c
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:04:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'asd'
 {executed in 1 msec}
[2024-12-09 12:04:24 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|18      |asd      |null|$2a$10$OMdmpNGC9a9Nb2hSK2oGROemih6py1Qwe5RKL9atH9X3I.LFzY3nu |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'asd'
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|18      |asd      |null|$2a$10$OMdmpNGC9a9Nb2hSK2oGROemih6py1Qwe5RKL9atH9X3I.LFzY3nu |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |1      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |1      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:04:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:28 INFO http-nio-8080-exec-2] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 0 msec}
[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |3         |3               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents          |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd      |asd |null|1      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:04:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:04:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:31:19 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 12:31:19 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:31:19 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:31:19 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:31:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5076 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 12:31:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:31:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:31:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:31:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:31:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 221 ms
[2024-12-09 12:31:19 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:31:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:31:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 0.399 seconds (process running for 1620.248)
[2024-12-09 12:31:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 12:44:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11516 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 12:44:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:44:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:44:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:44:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:44:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:44:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:44:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:44:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:44:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 771 ms
[2024-12-09 12:44:07 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 12:44:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:44:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:44:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:44:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:44:07 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.63 seconds (process running for 1.994)
[2024-12-09 12:44:11 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:44:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:44:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:44:11 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-09 12:44:11 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-09 12:44:11 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:44:11 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@406846e4
[2024-12-09 12:44:11 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:44:11 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'C.user_id' in 'field list'
[2024-12-09 12:44:11 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C0
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:44:11 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,         B.user_id AS writerUserId         , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm         , B.uid, B.pic AS writerPic         , IF(C.user_id IS NULL, 0, 1) AS isLike         FROM feed A INNER JOIN user B           ON A.writer_user_id = B.user_id         LEFT JOIN feed_like C0            ON A.feed_id = C.feed_id           AND C.user_id = ?                   ORDER BY A.feed_id DESC         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:44:14 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-09 12:44:14 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-09 12:44:14 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'C.user_id' in 'field list'
[2024-12-09 12:44:14 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C0
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:44:14 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,         B.user_id AS writerUserId         , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm         , B.uid, B.pic AS writerPic         , IF(C.user_id IS NULL, 0, 1) AS isLike         FROM feed A INNER JOIN user B           ON A.writer_user_id = B.user_id         LEFT JOIN feed_like C0            ON A.feed_id = C.feed_id           AND C.user_id = ?                   ORDER BY A.feed_id DESC         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:44:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test'
 {executed in 0 msec}
[2024-12-09 12:44:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                       |upw                                                          |
|--------|---------|------------------------------------------|-------------------------------------------------------------|
|12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |$2a$10$U/746OTg9rqWqMItg5MZAe1UBBwQWPzI3p0ydhWCKD9i8NaD1rRia |
|--------|---------|------------------------------------------|-------------------------------------------------------------|

[2024-12-09 12:44:48 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:44:48 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:44:48 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'C.user_id' in 'field list'
[2024-12-09 12:44:48 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C0
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:44:48 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,         B.user_id AS writerUserId         , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm         , B.uid, B.pic AS writerPic         , IF(C.user_id IS NULL, 0, 1) AS isLike         FROM feed A INNER JOIN user B           ON A.writer_user_id = B.user_id         LEFT JOIN feed_like C0            ON A.feed_id = C.feed_id           AND C.user_id = ?                   ORDER BY A.feed_id DESC         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=104) Unknown column 'C.user_id' in 'field list'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList(FeedService.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:45:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:45:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:45:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4112 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 12:45:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:45:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:45:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:45:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:45:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:45:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:45:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:45:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:45:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-09 12:45:06 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 12:45:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:45:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:45:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:45:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:45:07 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.632 seconds (process running for 1.977)
[2024-12-09 12:45:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:45:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:45:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@406846e4
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:45:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:45:12 INFO http-nio-8080-exec-10] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 0 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:45:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:45:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:27 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:21 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 1 msec}
[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:46:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:23 INFO http-nio-8080-exec-8] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:46:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 0 msec}
[2024-12-09 12:46:23 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:46:23 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 2, size: null, userId: 12
[2024-12-09 12:46:23 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 12:46:23 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-09 12:46:23 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:46:50 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:50 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 INFO http-nio-8080-exec-2] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 1 msec}
[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |7         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:47:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:47:07 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-09 12:47:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:47:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:47:09 INFO http-nio-8080-exec-8] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:47:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 1 msec}
[2024-12-09 12:47:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:47:09 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 2, size: null, userId: 12
[2024-12-09 12:47:09 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 12:47:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 4 msec}
[2024-12-09 12:47:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:48:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:48:20 INFO http-nio-8080-exec-3] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 1 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:48:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:48:26 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=19)
[2024-12-09 12:48:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 2 msec}
[2024-12-09 12:48:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |1           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:48:26 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 2, size: null, userId: 12
[2024-12-09 12:48:26 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 12:48:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-09 12:48:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 8 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:52:39 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:39 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 3 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 7 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:52:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:52:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:07 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=12, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㅁ)
[2024-12-09 12:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed
        SET writer_user_id = 12
        , contents = 'ㅁㄴㅇㅁㄴㅇ'
        , location = 'ㅁㅁ'
 {executed in 0 msec}
[2024-12-09 12:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 12
        , contents = 'ㅁㄴㅇㅁㄴㅇ'
        , location = 'ㅁㅁ'
 {executed in 0 msec}
[2024-12-09 12:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|37        |
|----------|

[2024-12-09 12:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
          37, 'f72a3852-68a4-4709-9fcf-f957106a1059.png'
         )
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:53:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:53:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 13:03:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 13:03:10 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11764 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 13:03:10 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:03:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:03:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:03:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:03:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:03:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:03:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:03:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:03:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-09 13:03:11 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 13:03:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 13:03:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 13:03:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:03:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 13:03:12 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.676 seconds (process running for 2.029)
[2024-12-09 13:03:16 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 13:03:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 13:03:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4838da7e
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:03:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:03:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 13:04:21 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:24 INFO http-nio-8080-exec-1] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p com.green.greengramver.user.model.UserPicPatcReq@19e55768
[2024-12-09 13:04:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 13:04:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 13:04:42 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10660 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 13:04:42 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:04:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:04:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:04:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:04:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:04:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:04:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:04:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:04:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 777 ms
[2024-12-09 13:04:42 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 13:04:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 13:04:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 13:04:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:04:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 13:04:43 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.699 seconds (process running for 2.048)
[2024-12-09 13:04:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 13:04:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 13:04:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e53f519
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:50 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:50 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 13:04:52 INFO http-nio-8080-exec-6] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 13:04:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 2 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 13:04:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 13:04:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 13:04:53 INFO http-nio-8080-exec-7] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatcReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@441b88a9, picName=null)
[2024-12-09 13:07:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 13:07:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:36:37 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4332 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 15:36:37 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:36:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:36:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:36:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:36:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:36:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:36:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:36:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:36:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 775 ms
[2024-12-09 15:36:38 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 15:36:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:36:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:36:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:36:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:36:38 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.733 seconds (process running for 2.07)
[2024-12-09 15:37:04 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:37:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:37:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5dc7ac87
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:37:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:25 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:37:27 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 2 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 15:37:27 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:37:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:37:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:37:29 INFO http-nio-8080-exec-8] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatcReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@32a4dee6, picName=null)
[2024-12-09 15:37:29 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.MissingFormatArgumentException: Format specifier '%s'] with root cause
java.util.MissingFormatArgumentException: Format specifier '%s'
	at java.base/java.util.Formatter.format(Formatter.java:2688)
	at java.base/java.util.Formatter.format(Formatter.java:2625)
	at java.base/java.lang.String.format(String.java:4145)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:84)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:38:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:38:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:38:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6952 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 15:38:06 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:38:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:38:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:38:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:38:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:38:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:38:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:38:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-09 15:38:07 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 15:38:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:38:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:38:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:38:07 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.657 seconds (process running for 2.011)
[2024-12-09 15:38:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:38:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:38:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5dd06624
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:38:10 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:10 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:38:12 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 1 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:38:14 INFO http-nio-8080-exec-3] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatcReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@54bac80d, picName=null)
[2024-12-09 15:38:14 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming] 1. PreparedStatement.setObject(1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@54bac80d)
java.sql.SQLException: Type org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile not supported type
	at org.mariadb.jdbc.BasePreparedStatement.setInternalObject(BasePreparedStatement.java:1282)
	at org.mariadb.jdbc.BasePreparedStatement.setObject(BasePreparedStatement.java:677)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.setObject(PreparedStatementSpy.java:1027)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setObject(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.type.ObjectTypeHandler.setNonNullParameter(ObjectTypeHandler.java:31)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.type.UnknownTypeHandler.setNonNullParameter(UnknownTypeHandler.java:71)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:90)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:97)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:38:14 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
java.sql.SQLException: Type org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile not supported type
	at org.mariadb.jdbc.BasePreparedStatement.setInternalObject(BasePreparedStatement.java:1282)
	at org.mariadb.jdbc.BasePreparedStatement.setObject(BasePreparedStatement.java:677)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.setObject(PreparedStatementSpy.java:1027)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setObject(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.type.ObjectTypeHandler.setNonNullParameter(ObjectTypeHandler.java:31)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.type.UnknownTypeHandler.setNonNullParameter(UnknownTypeHandler.java:71)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:90)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:97)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:39:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:39:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:39:40 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6260 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 15:39:40 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:39:40 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:39:40 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:39:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:39:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:39:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:39:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:39:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:39:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 782 ms
[2024-12-09 15:39:41 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 15:39:41 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:39:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:39:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:39:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:39:41 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.639 seconds (process running for 2.022)
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35e0cfaf
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:57 INFO http-nio-8080-exec-8] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@48c1a835, picName=null)
[2024-12-09 15:39:57 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming] 1. PreparedStatement.setObject(1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@48c1a835)
java.sql.SQLException: Type org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile not supported type
	at org.mariadb.jdbc.BasePreparedStatement.setInternalObject(BasePreparedStatement.java:1282)
	at org.mariadb.jdbc.BasePreparedStatement.setObject(BasePreparedStatement.java:677)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.setObject(PreparedStatementSpy.java:1027)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setObject(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.type.ObjectTypeHandler.setNonNullParameter(ObjectTypeHandler.java:31)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.type.UnknownTypeHandler.setNonNullParameter(UnknownTypeHandler.java:71)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:90)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:98)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:39:57 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
java.sql.SQLException: Type org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile not supported type
	at org.mariadb.jdbc.BasePreparedStatement.setInternalObject(BasePreparedStatement.java:1282)
	at org.mariadb.jdbc.BasePreparedStatement.setObject(BasePreparedStatement.java:677)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.setObject(PreparedStatementSpy.java:1027)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setObject(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.type.ObjectTypeHandler.setNonNullParameter(ObjectTypeHandler.java:31)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.type.UnknownTypeHandler.setNonNullParameter(UnknownTypeHandler.java:71)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:74)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:90)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:98)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:40:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:40:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:40:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 12336 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 15:40:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:40:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:40:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:40:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:40:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:40:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:40:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:40:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 914 ms
[2024-12-09 15:40:32 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 15:40:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:40:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:40:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:40:32 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.812 seconds (process running for 2.156)
[2024-12-09 15:40:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:40:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:40:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e1d68cb
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:40:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:40:38 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 1 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 15:40:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:40:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:40:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:40:40 INFO http-nio-8080-exec-10] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f7d9d7d, picName=null)
[2024-12-09 15:40:40 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        ...' at line 1
[2024-12-09 15:40:40 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        WHERE user_id = 12
 {FAILED after 7 msec}
java.sql.SQLSyntaxErrorException: (conn=174) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        ...' at line 1
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:98)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:40:40 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=174) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        ...' at line 1
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE TO user         SET pic = ?         WHERE user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=174) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        ...' at line 1
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=174) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TO user
        SET pic = '659655d3-1e93-44d3-8ace-594af46d82ee.png'
        ...' at line 1
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengramver.user.UserService.patchUserPic(UserService.java:98)
	at com.green.greengramver.user.UserController.patchProfilePic(UserController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:41:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:41:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:41:14 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10648 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 15:41:14 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:41:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:41:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:41:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:41:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:41:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:41:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:41:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:41:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 922 ms
[2024-12-09 15:41:15 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 15:41:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:41:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:41:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:41:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:41:15 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.795 seconds (process running for 2.138)
[2024-12-09 15:41:19 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:41:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:41:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=null)
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42ab9323
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                      |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                      |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                      |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:41:21 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=12, profileUserId=12)
[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 12, 1, 0))
        + MAX(IF(F2.to_user_id = 12, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-09 15:41:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                       |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|------------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:23 INFO http-nio-8080-exec-6] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=12, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@ee42a80, picName=null)
[2024-12-09 15:41:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = '0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png'
        WHERE user_id = 12
 {executed in 8 msec}
[2024-12-09 16:09:27 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:09:27 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:09:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 13144 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 16:09:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:09:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 16:09:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 16:09:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:09:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:09:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:09:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:09:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:09:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-09 16:09:31 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 16:09:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:09:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:09:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:09:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:09:32 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.759 seconds (process running for 2.087)
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [com.green.greengramver.user.UserController] 파일정보: null
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6885b681
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 16:09:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'ss'
          , upw = '$2a$10$rHKoH.qnGpnRHkMGT4MVqOE24.9l/1MdMDKWmyPNuud86C4LsX2k2'
          , nick_name = 'ss'
          , pic = NULL
 {executed in 2 msec}
[2024-12-09 16:09:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'ss'
          , upw = '$2a$10$rHKoH.qnGpnRHkMGT4MVqOE24.9l/1MdMDKWmyPNuud86C4LsX2k2'
          , nick_name = 'ss'
          , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:09:49 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|22        |
|----------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'ss'
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|22      |ss       |null|$2a$10$rHKoH.qnGpnRHkMGT4MVqOE24.9l/1MdMDKWmyPNuud86C4LsX2k2 |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 22
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=22, profileUserId=null)
[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 22

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                     |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:09:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:09:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:09:56 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 22
[2024-12-09 16:09:56 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=22, profileUserId=22)
[2024-12-09 16:09:56 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=22, profileUserId=22)
[2024-12-09 16:09:56 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 22

            WHERE writer_user_id = 22

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:09:56 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-09 16:09:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 22, 1, 0))
        + MAX(IF(F2.to_user_id = 22, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 22
 {executed in 1 msec}
[2024-12-09 16:09:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|22      |null|2024-12-09 16:09:49 |ss       |0        |0         |0         |0               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:09:59 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=22, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@8585657, picName=null)
[2024-12-09 16:09:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = '5bc2a4e4-de6a-47cd-b544-9a79023a8a86.png'
        WHERE user_id = 22
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 22
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=22, profileUserId=null)
[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 22

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                     |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:22:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:30:12 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 16:30:12 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:30:12 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:30:12 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:30:12 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 13144 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-09 16:30:12 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:30:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:30:12 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:30:12 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:30:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 193 ms
[2024-12-09 16:30:12 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:30:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:30:12 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 0.38 seconds (process running for 1242.379)
[2024-12-09 16:30:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
